/// @description 
// Horizontal movement

// ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏∞‡πÇ‡∏î‡∏î‡πÅ‡∏•‡∏∞‡∏û‡∏∏‡πà‡∏á
if (!dashCooldown) dashCooldown = 0; // ‡∏Ñ‡∏π‡∏•‡∏î‡∏≤‡∏ß‡∏ô‡πå‡∏Å‡∏≤‡∏£‡∏û‡∏∏‡πà‡∏á
var dashSpeed = 10; // ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏∏‡πà‡∏á
var dashDuration = 10; // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ü‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏û‡∏∏‡πà‡∏á
var inputDash = keyboard_check_pressed(vk_shift);

// ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
moveX = inputX * moveSpeed;

// ‡∏Å‡∏£‡∏∞‡πÇ‡∏î‡∏î (Jump)
if (inputJump && jumpCount > 0) {
    moveY = -jumpSpeed;
    jumpCount--; // ‡∏•‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏∞‡πÇ‡∏î‡∏î
    show_debug_message("JumpCount: " + string(jumpCount));
}

// ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï jumpCount ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÅ‡∏ï‡∏∞‡∏û‡∏∑‡πâ‡∏ô
if (place_meeting(x, y + 1, oPlatformParent)) {
    jumpCount = 1;
}

// ‡∏û‡∏∏‡πà‡∏á (Dash)
if (inputDash && !isDashing && dashCooldown <= 0) {
	isDashing = true;
	dashProgress = 0; // ‡πÄ‡∏£‡∏¥‡πà‡∏° Dash ‡πÉ‡∏´‡∏°‡πà
	if (dashDirection == 0) dashDirection = 1;
    dashDirection = sign(inputX);
    dashCooldown = dashDuration + 15; // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏π‡∏•‡∏î‡∏≤‡∏ß‡∏ô‡πå
}

// ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Dash
if (isDashing) {
    dashProgress += 1 / dashDuration; // ‡∏Ñ‡πà‡∏≠‡∏¢‡πÜ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏Ç‡∏≠‡∏á Dash (0 ‚Üí 1)
    
    // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£ Dash ‡∏•‡∏∑‡πà‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ Ease Out
    var dashAmount = dashSpeed * (1 - power(dashProgress, 2)); // Smooth effect
    
    moveX = dashDirection * dashAmount;

    // ‡∏à‡∏ö Dash ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ñ‡∏∂‡∏á‡∏à‡∏∏‡∏î‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
    if (dashProgress >= 1) {
        isDashing = false;
        moveX = 0; // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß
    }
} else {
    // ‡∏Ñ‡∏π‡∏•‡∏î‡∏≤‡∏ß‡∏ô‡πå‡∏•‡∏î‡∏•‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ Dash
    if (dashCooldown > 0) dashCooldown--;
		//show_debug_message("dashCooldown: " + string(dashCooldown));
}


// ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢
var _finalMoveX = moveX;
var _finalMoveY = moveY;

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ä‡∏ô‡∏Å‡∏≥‡πÅ‡∏û‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
var isWallLeft  = place_meeting(x - 1, y, [oPlatform ,oPlatform_2, oPipe]);
var isWallRight = place_meeting(x + 1, y, [oPlatform, oPlatform_2, oPipe]);
var isWall      = isWallLeft || isWallRight;
var isOnGround = place_meeting(x, y + 1, [oPlatform, oPlatform_2, oPipe ]);

// ‡∏Å‡∏≤‡∏£‡∏ä‡∏ô‡∏Å‡∏±‡∏ö‡∏û‡∏∑‡πâ‡∏ô‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà
var _movingPlatform = instance_place(x, y + max(1, _finalMoveY), [oPlatformMoving,oPlatformMoving_1]);
if (_movingPlatform && bbox_bottom <= _movingPlatform.bbox_top) {
    if (_finalMoveY > 0) {
        while (!place_meeting(x, y + sign(_finalMoveY), [oPlatformMoving,oPlatformMoving_1])) {
            y += sign(_finalMoveY);
        }
        _finalMoveY = 0;
        moveY = 0;
    }
    _finalMoveX += _movingPlatform.moveX;
    _finalMoveY += _movingPlatform.moveY;
}


// ‡∏Å‡∏≤‡∏£‡∏ä‡∏ô‡∏Å‡∏±‡∏ö‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏° (‡πÅ‡∏ô‡∏ß X)
if (place_meeting(x + _finalMoveX, y, [oPlatform, oPlatform_2, oPipe ])) {
    while (!place_meeting(x + sign(_finalMoveX), y, [oPlatform, oPlatform_2, oPipe])) {
        x += sign(_finalMoveX);
    }
    _finalMoveX = 0;
	
	// ‡∏ñ‡πâ‡∏≤‡∏Å‡∏£‡∏∞‡πÇ‡∏î‡∏î‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏ä‡∏ô‡∏Å‡∏≥‡πÅ‡∏û‡∏á ‡πÉ‡∏´‡πâ‡∏î‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏≠‡∏Å‡∏ô‡∏¥‡∏î‡∏´‡∏ô‡πà‡∏≠‡∏¢
	if (moveY < 0) {
        x -= sign(_finalMoveX) * 2; // ‡∏î‡∏±‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏≥‡πÅ‡∏û‡∏á
    }
}

// ‡∏Å‡∏≤‡∏£‡∏ä‡∏ô‡∏Å‡∏±‡∏ö‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏° (‡πÅ‡∏ô‡∏ß Y) (‡πÉ‡∏´‡πâ‡πÄ‡∏ä‡πá‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ä‡∏ô‡∏Å‡∏≥‡πÅ‡∏û‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡πâ‡∏≤‡∏á)
if (!isWall && place_meeting(x, y + _finalMoveY, [oPlatform, oPlatform_2, oPipe])) {
    while (!place_meeting(x, y + sign(_finalMoveY), [oPlatform, oPlatform_2, oPipe])) {
        y += sign(_finalMoveY);
    }
    _finalMoveY = 0;
    moveY = 0;
}

// üöÄ **‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏Å‡∏à‡∏≤‡∏Å‡∏û‡∏∑‡πâ‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ä‡∏ô‡∏Å‡∏≥‡πÅ‡∏û‡∏á**
if (isWall && isOnGround && _finalMoveY > 0) {
    _finalMoveY = 0;
    moveY = 0;
}

// ‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà
x += _finalMoveX;
y += _finalMoveY;


// ‡πÅ‡∏£‡∏á‡πÇ‡∏ô‡πâ‡∏°‡∏ñ‡πà‡∏ß‡∏á
if (moveY < 10) {
    moveY += gravSpeed;
}



// change switch and unlock the door
if (place_meeting(x, y, oSwitch_0)) {
    if (keyboard_check_pressed(ord("E"))) {
        var target = instance_place(x, y, oSwitch_0);
        if (target != noone) {
            if (target.sprite_index == Switch__2_) {
                target.sprite_index = Switch__1;
                // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏ó‡∏µ‡πà‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏Å‡∏±‡∏ö‡∏™‡∏ß‡∏¥‡∏ï‡∏ä‡πå‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
                var door = instance_nearest(target.x, target.y, oDoor_lock);
                if (door != noone) {
                    with (door) {
                        instance_change(oDoor_unlocked, false);
                    }
                }
            } 
            else if (target.sprite_index == Switch__1) {
                target.sprite_index = Switch__2_;
                var door = instance_nearest(target.x, target.y, oDoor_unlocked);
                if (door != noone) {
                    with (door) {
                        instance_change(oDoor_lock, false);
                    }
                }
            }
        }
    }
}

// open the door
if (place_meeting(x, y, oDoor_unlocked)) {
    with (oDoor_unlocked) {
        instance_change(oDoor_open, false);
    }
} else if !(place_meeting(x, y, oDoor_open)){
    with (oDoor_open) {
        instance_change(oDoor_unlocked, false);
    }
}

//enter the door for going to the next room
if (place_meeting(x, y, oDoor_open)) {
    if (keyboard_check_pressed(ord("E"))) {
        // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
        room_goto_next();
    }
}
// collision
if (place_meeting(x,y, [OAcid,OAcid1,Spike1,OSAW])) {
    // ‡∏™‡πà‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á Checkpoint
    x = checkpointX;
    y = checkpointY;

    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£
    moveX = 0;
    moveY = 0;
    show_debug_message("Respawn at checkpoint");
}

// checkpoint
if (place_meeting(x, y, oCheckpoint)) {
    var checkpoint = instance_place(x, y, oCheckpoint);
    if !(checkpoint.sprite_index = Barrel__2_) {
        if (checkpoint != noone) {
        checkpointX = checkpoint.x;
        checkpointY = checkpoint.y;
        show_debug_message("Checkpoint saved at: " + string(checkpointX) + ", " + string(checkpointY));
        }
    } 
}